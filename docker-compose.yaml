version: '3.1'

networks:
  http_network:
    external: true
  db_network:
    external: false

services:

  db:
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD
    volumes:
      - ./data/db:/var/lib/postgresql/data
    networks:
      - db_network

  adminer:
    image: adminer
    restart: unless-stopped
    networks:
      - http_network
      - db_network
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=http_network"
      - "traefik.http.routers.adminer.rule=Host(`${FQDN}`) && PathPrefix(`/adminer`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"

  django:
    build: ./dj_base
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_USER
      - DATABASE_NAME
      - DATABASE_PASSWORD
      - DATABASE_HOST
      - ALLOWED_HOSTS=${FQDN}
      - SECRET_KEY
    volumes:
      - ./fixtures:/fixtures
    depends_on:
      - db
    networks:
      - http_network
      - db_network
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=http_network"
      - "traefik.http.routers.django.rule=(Host(`${FQDN}`) && PathPrefix(`/api`)) || (Host(`${FQDN}`) && PathPrefix(`/accounts`)) || (Host(`${FQDN}`) && PathPrefix(`/admin`))"
      - "traefik.http.routers.django.entrypoints=websecure"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
